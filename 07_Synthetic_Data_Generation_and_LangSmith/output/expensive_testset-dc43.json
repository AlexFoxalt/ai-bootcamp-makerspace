[
  {
    "ID": "c022bf9f-cd7a-484f-afa3-a2a2725fbed5",
    "Type:": "SimpleEvolution",
    "Question": "How has incresed compettion impacted LLM pricing?",
    "Answer": "Increased competition has contributed to a dramatic collapse in the cost of running a prompt through the top tier hosted LLMs, resulting in significantly reduced prices for various models.",
    "Context": "class, but at 1B and 3B sizes they punch massively above their weight. I run Llama 3.2 3B on my iPhone using the free MLC Chat iOS app and it\u2019s a shockingly capable model for its tiny (<2GB) size. Try firing it up and asking it for \u201ca plot outline of a Netflix Christmas movie where a data journalist falls in love with a local ceramacist\u201d. Here\u2019s what I got, at a respectable 20 tokens per second: Here\u2019s the rest of the transcript. It\u2019s bland and generic, but my phone can pitch bland and generic Christmas movies to Netflix now! LLM prices crashed, thanks to competition and increased efficiency The past twelve months have seen a dramatic collapse in the cost of running a prompt through the top tier hosted LLMs. In December 2023 (here\u2019s the Internet Archive for the OpenAI pricing page) OpenAI were charging $30/million input tokens for GPT-4, $10/mTok for the then-new GPT-4 Turbo and $1/mTok for GPT-3.5 Turbo. Today $30/mTok gets you OpenAI\u2019s most expensive model, o1. GPT-4o is $2.50 (12x cheaper than GPT-4) and GPT-4o mini is $0.15/mTok\u2014nearly 7x cheaper than GPT-3.5 and massively more capable. Other model providers charge even less. Anthropic\u2019s Claude 3 Haiku (from March, but still their cheapest model) is $0.25/mTok. Google\u2019s Gemini 1.5 Flash is $0.075/mTok and their Gemini 1.5 Flash 8B is $0.0375/mTok\u2014that\u2019s 27x cheaper than GPT-3.5 Turbo last year. I\u2019ve been tracking these pricing changes under my llm-pricing tag. These price drops are driven by two factors: increased competition and increased efficiency. The efficiency thing is really important for everyone who is concerned about the environmental impact of LLMs. These price drops tie directly to how much energy is being used for running prompts. There\u2019s still plenty to worry about with respect to the environmental impact of the great AI datacenter buildout, but a lot of the concerns over the energy cost of individual prompts are no longer credible. Here\u2019s a fun napkin calculation: how much would it cost to generate short descriptions of every one of the 68,000 photos in my personal photo library using Google\u2019s Gemini 1.5 Flash 8B (released in October), their cheapest model? Each photo would need 260 input tokens and around 100 output tokens. 260 * 68,000 = 17,680,000 input tokens 17,680,000 * $0.0375/million = $0.66 100 * 68,000 = 6,800,000 output tokens 6,800,000 * $0.15/million = $1.02 That\u2019s a total cost of $1.68 to process 68,000 images. That\u2019s so absurdly cheap I had to run the numbers three times to confirm I got it right. How good are those descriptions? Here\u2019s what I got from this command: Against this photo of butterflies at the California Academy of Sciences: A shallow dish, likely a hummingbird or butterfly feeder, is red. Pieces of orange slices of fruit are visible inside the dish. Two butterflies are positioned in the feeder, one is a dark brown/black butterfly with white/cream-colored markings. The other is a large, brown butterfly with patterns of lighter brown, beige, and black markings, including prominent eye spots. The larger brown butterfly appears to be feeding on the fruit. 260 input tokens, 92 output tokens. Cost approximately 0.0024 cents (that\u2019s less than a 400th of a cent). This increase in efficiency and reduction in price is my single favourite trend from 2024. I want the utility of LLMs at a fraction of the energy cost and it looks like that\u2019s what we\u2019re getting. Multimodal vision is common, audio and video are starting to emerge My butterfly example above illustrates another key trend from 2024: the rise of multi-modal LLMs. A year ago the single most notable example of these was GPT-4 Vision, released at OpenAI\u2019s DevDay in November 2023. Google\u2019s multi-modal Gemini 1.0 was announced on December 7th 2023 so it also (just) makes it into the 2023 window. In 2024, almost every significant model vendor released multi-modal models. We saw the Claude 3 series from Anthropic in March, Gemini 1.5 Pro in April (images, audio and video), then September brought Qwen2-VL and Mistral\u2019s Pixtral 12B and Meta\u2019s Llama 3.2 11B and 90B vision models. We got audio input and output from OpenAI in October, then November saw SmolVLM from Hugging Face and December saw image and video models from Amazon Nova. In October I upgraded my LLM CLI tool to support multi-modal models via attachments. It now has plugins for a whole collection of different vision models. I think people who complain that LLM improvement has slowed are often missing the enormous advances in these multi-modal models. Being able to run prompts against images (and audio and video) is a fascinating new way to apply these models. Voice and live camera mode are science fiction come to life The audio and live video modes that have started to emerge deserve a special mention. The ability to talk to ChatGPT first arrived in September 2023, but it was mostly an illusion: OpenAI used their excellent Whisper speech-to-text model and a new text-to-speech model (creatively named tts-1) to enable conversations with the ChatGPT mobile apps, but the actual model just saw text. The May 13th announcement of GPT-4o included a demo of a brand new voice mode, where the true multi-modal GPT-4o (the o is for \u201comni\u201d) model could accept audio input and output incredibly realistic sounding speech without needing separate TTS or STT models. The demo also sounded conspicuously similar to Scarlett Johansson... and after she complained the voice from the demo, Skye, never made it to a production product. The delay in releasing the new voice mode after the initial demo caused quite a lot of confusion. I wrote about that in ChatGPT in \u201c4o\u201d mode is not running the new features yet. When ChatGPT Advanced Voice mode finally did roll out (a slow roll from August through September) it was spectacular. I\u2019ve been using it extensively on walks with my dog and it\u2019s amazing how much the improvement in intonation elevates the material. I\u2019ve also had a lot of fun experimenting with"
  },
  {
    "ID": "ef2a5862-a2a9-4df2-9a8c-e8f5b8b921cd",
    "Type:": "SimpleEvolution",
    "Question": "How does the new approach to scaling model performance impact the computational requirements during inference as opposed to training?",
    "Answer": "The new approach to scaling model performance allows models to tackle harder problems by allocating more computational resources during inference rather than solely focusing on increasing compute during training time.",
    "Context": "that it opens up a new way to scale a model: instead of improving model performance purely through additional compute at training time, models can now take on harder problems by spending more compute on inference. The sequel to o1, o3 (they skipped \u201co2\u201d for European trademark reasons) was announced on 20th December with an impressive result against the ARC-AGI benchmark, albeit one that likely involved more than $1,000,000 of compute time expense! o3 is expected to ship in January. I doubt many people have real-world problems that would benefit from that level of compute expenditure\u2014I certainly don\u2019t!\u2014but it appears to be a genuine next step in LLM architecture for taking on much harder problems. OpenAI are not the only game in town here. Google released their first entrant in the category, gemini-2.0-flash-thinking-exp, on December 19th. Alibaba\u2019s Qwen team released their QwQ model on November 28th\u2014under an Apache 2.0 license, and that one I could run on my own machine. They followed that up with a vision reasoning model called QvQ on December 24th, which I also ran locally. DeepSeek made their DeepSeek-R1-Lite-Preview model available to try out through their chat interface on November 20th. To understand more about inference scaling I recommend Is AI progress slowing down? by Arvind Narayanan and Sayash Kapoor. Nothing yet from Anthropic or Meta but I would be very surprised if they don\u2019t have their own inference-scaling models in the works. Meta published a relevant paper Training Large Language Models to Reason in a Continuous Latent Space in December. Was the best currently available LLM trained in China for less than $6m? Not quite, but almost! It does make for a great attention-grabbing headline. The big news to end the year was the release of DeepSeek v3\u2014dropped on Hugging Face on Christmas Day without so much as a README file, then followed by documentation and a paper the day after that. DeepSeek v3 is a huge 685B parameter model\u2014one of the largest openly licensed models currently available, significantly bigger than the largest of Meta\u2019s Llama series, Llama 3.1 405B. Benchmarks put it up there with Claude 3.5 Sonnet. Vibe benchmarks (aka the Chatbot Arena) currently rank it 7th, just behind the Gemini 2.0 and OpenAI 4o/o1 models. This is by far the highest ranking openly licensed model. The really impressive thing about DeepSeek v3 is the training cost. The model was trained on 2,788,000 H800 GPU hours at an estimated cost of $5,576,000. Llama 3.1 405B trained 30,840,000 GPU hours\u201411x that used by DeepSeek v3, for a model that benchmarks slightly worse. Those US export regulations on GPUs to China seem to have inspired some very effective training optimizations! The environmental impact got better A welcome result of the increased efficiency of the models\u2014both the hosted ones and the ones I can run locally\u2014is that the energy usage and environmental impact of running a prompt has dropped enormously over the past couple of years. OpenAI themselves are charging 100x less for a prompt compared to the GPT-3 days. I have it on good authority that neither Google Gemini nor Amazon Nova (two of the least expensive model providers) are running prompts at a loss. I think this means that, as individual users, we don\u2019t need to feel any guilt at all for the energy consumed by the vast majority of our prompts. The impact is likely neglible compared to driving a car down the street or maybe even watching a video on YouTube. Likewise, training. DeepSeek v3 training for less than $6m is a fantastic sign that training costs can and should continue to drop. For less efficient models I find it useful to compare their energy usage to commercial flights. The largest Llama 3 model cost about the same as a single digit number of fully loaded passenger flights from New York to London. That\u2019s certainly not nothing, but once trained that model can be used by millions of people at no extra training cost. The environmental impact got much, much worse The much bigger problem here is the enormous competitive buildout of the infrastructure that is imagined to be necessary for these models in the future. Companies like Google, Meta, Microsoft and Amazon are all spending billions of dollars rolling out new datacenters, with a very material impact on the electricity grid and the environment. There\u2019s even talk of spinning up new nuclear power stations, but those can take decades. Is this infrastructure necessary? DeepSeek v3\u2019s $6m training cost and the continued crash in LLM prices might hint that it\u2019s not. But would you want to be the big tech executive that argued NOT to build out this infrastructure only to be proven wrong in a few years\u2019 time? An interesting point of comparison here could be the way railways rolled out around the world in the 1800s. Constructing these required enormous investments and had a massive environmental impact, and many of the lines that were built turned out to be unnecessary\u2014sometimes multiple lines from different companies serving the exact same routes! The resulting bubbles contributed to several financial crashes, see Wikipedia for Panic of 1873, Panic of 1893, Panic of 1901 and the UK\u2019s Railway Mania. They left us with a lot of useful infrastructure and a great deal of bankruptcies and environmental damage. The year of slop 2024 was the year that the word \"slop\" became a term of art. I wrote about this in May, expanding on this tweet by @deepfates: Watching in real time as \u201cslop\u201d becomes a term of art. the way that \u201cspam\u201d became the term for unwanted emails, \u201cslop\u201d is going in the dictionary as the term for unwanted AI generated content I expanded that definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014"
  },
  {
    "ID": "3d8b21e7-b9ef-48fc-95e0-2a67ff218a5e",
    "Type:": "MultiContextEvolution",
    "Question": "How has the ability to run LLMs on personal devices like laptops and iPhones impacted the environmental impacts of LLM development, considering the advancements in AI capabilities over the years?",
    "Answer": "The ability to run Large Language Models (LLMs) on personal devices like laptops and iPhones has significantly impacted the environmental aspects of LLM development. This capability is largely due to advancements in AI that have increased model efficiency and reduced the energy required for running these models. For instance, running LLMs on personal devices has become feasible without the need for datacenter class servers, which traditionally consume large amounts of energy. This shift not only makes LLMs more accessible but also reduces the environmental footprint associated with their operation. The increased efficiency and competition among LLM providers have led to a dramatic reduction in the cost and, implicitly, the energy consumption of running LLMs, addressing some of the environmental concerns previously associated with their development.",
    "Context": [
      "Simon Willison\u2019s Weblog Subscribe Things we learned about LLMs in 2024 31st December 2024 A lot has happened in the world of Large Language Models over the course of 2024. Here\u2019s a review of things we figured out about the field in the past twelve months, plus my attempt at identifying key themes and pivotal moments. This is a sequel to my review of 2023. In this article: The GPT-4 barrier was comprehensively broken Some of those GPT-4 models run on my laptop LLM prices crashed, thanks to competition and increased efficiency Multimodal vision is common, audio and video are starting to emerge Voice and live camera mode are science fiction come to life Prompt driven app generation is a commodity already Universal access to the best models lasted for just a few short months \u201cAgents\u201d still haven\u2019t really happened yet Evals really matter Apple Intelligence is bad, Apple\u2019s MLX library is excellent The rise of inference-scaling \u201creasoning\u201d models Was the best currently available LLM trained in China for less than $6m? The environmental impact got better The environmental impact got much, much worse The year of slop Synthetic training data works great LLMs somehow got even harder to use Knowledge is incredibly unevenly distributed LLMs need better criticism Everything tagged \u201cllms\u201d on my blog in 2024 The GPT-4 barrier was comprehensively broken In my December 2023 review I wrote about how We don\u2019t yet know how to build GPT-4\u2014OpenAI\u2019s best model was almost a year old at that point, yet no other AI lab had produced anything better. What did OpenAI know that the rest of us didn\u2019t? I\u2019m relieved that this has changed completely in the past twelve months. 18 organizations now have models on the Chatbot Arena Leaderboard that rank higher than the original GPT-4 from March 2023 (GPT-4-0314 on the board)\u201470 models in total. The earliest of those was Google\u2019s Gemini 1.5 Pro, released in February. In addition to producing GPT-4 level outputs, it introduced several brand new capabilities to the field\u2014most notably its 1 million (and then later 2 million) token input context length, and the ability to input video. I wrote about this at the time in The killer app of Gemini Pro 1.5 is video, which earned me a short appearance as a talking head in the Google I/O opening keynote in May. Gemini 1.5 Pro also illustrated one of the key themes of 2024: increased context lengths. Last year most models accepted 4,096 or 8,192 tokens, with the notable exception of Claude 2.1 which accepted 200,000. Today every serious provider has a 100,000+ token model, and Google\u2019s Gemini series accepts up to 2 million. Longer inputs dramatically increase the scope of problems that can be solved with an LLM: you can now throw in an entire book and ask questions about its contents, but more importantly you can feed in a lot of example code to help the model correctly solve a coding problem. LLM use-cases that involve long inputs are far more interesting to me than short prompts that rely purely on the information already baked into the model weights. Many of my tools were built using this pattern. Getting back to models that beat GPT-4: Anthropic\u2019s Claude 3 series launched in March, and Claude 3 Opus quickly became my new favourite daily-driver. They upped the ante even more in June with the launch of Claude 3.5 Sonnet\u2014a model that is still my favourite six months later (though it got a significant upgrade on October 22, confusingly keeping the same 3.5 version number. Anthropic fans have since taken to calling it Claude 3.6). Then there\u2019s the rest. If you browse the Chatbot Arena leaderboard today\u2014still the most useful single place to get a vibes-based evaluation of models\u2014you\u2019ll see that GPT-4-0314 has fallen to around 70th place. The 18 organizations with higher scoring models are Google, OpenAI, Alibaba, Anthropic, Meta, Reka AI, 01 AI, Amazon, Cohere, DeepSeek, Nvidia, Mistral, NexusFlow, Zhipu AI, xAI, AI21 Labs, Princeton and Tencent. Training a GPT-4 beating model was a huge deal in 2023. In 2024 it\u2019s an achievement that isn\u2019t even particularly notable, though I personally still celebrate any time a new organization joins that list. Some of those GPT-4 models run on my laptop My personal laptop is a 64GB M2 MacBook Pro from 2023. It\u2019s a powerful machine, but it\u2019s also nearly two years old now\u2014and crucially it\u2019s the same laptop I\u2019ve been using ever since I first ran an LLM on my computer back in March 2023 (see Large language models are having their Stable Diffusion moment). That same laptop that could just about run a GPT-3-class model in March last year has now run multiple GPT-4 class models! Some of my notes on that: Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac talks about Qwen2.5-Coder-32B in November\u2014an Apache 2.0 licensed model! I can now run a GPT-4 class model on my laptop talks about running Meta\u2019s Llama 3.3 70B (released in December) This remains astonishing to me. I thought a model with the capabilities and output quality of GPT-4 needed a datacenter class server with one or more $40,000+ GPUs. These models take up enough of my 64GB of RAM that I don\u2019t run them often\u2014they don\u2019t leave much room for anything else. The fact that they run at all is a testament to the incredible training and inference performance gains that we\u2019ve figured out over the past year. It turns out there was a lot of low-hanging fruit to be harvested in terms of model efficiency. I expect there\u2019s still more to come. Meta\u2019s Llama 3.2 models deserve a special mention. They may not be GPT-4 class, but at 1B and 3B sizes they punch massively above their weight. I run Llama 3.2 3B on my iPhone using the free MLC Chat iOS app and it\u2019s a shockingly capable model for its tiny (<2GB) size. Try firing it up and asking it for \u201ca plot outline",
      "Simon Willison\u2019s Weblog Subscribe Stuff we figured out about AI in 2023 31st December 2023 2023 was the breakthrough year for Large Language Models (LLMs). I think it\u2019s OK to call these AI\u2014they\u2019re the latest and (currently) most interesting development in the academic field of Artificial Intelligence that dates back to the 1950s. Here\u2019s my attempt to round up the highlights in one place! Large Language Models They\u2019re actually quite easy to build You can run LLMs on your own devices Hobbyists can build their own fine-tuned models We don\u2019t yet know how to build GPT-4 Vibes Based Development LLMs are really smart, and also really, really dumb Gullibility is the biggest unsolved problem Code may be the best application The ethics of this space remain diabolically complex My blog in 2023 Here\u2019s the sequel to this post: Things we learned about LLMs in 2024. Large Language Models In the past 24-36 months, our species has discovered that you can take a GIANT corpus of text, run it through a pile of GPUs, and use it to create a fascinating new kind of software. LLMs can do a lot of things. They can answer questions, summarize documents, translate from one language to another, extract information and even write surprisingly competent code. They can also help you cheat at your homework, generate unlimited streams of fake content and be used for all manner of nefarious purposes. So far, I think they\u2019re a net positive. I\u2019ve used them on a personal level to improve my productivity (and entertain myself) in all sorts of different ways. I think people who learn how to use them effectively can gain a significant boost to their quality of life. A lot of people are yet to be sold on their value! Some think their negatives outweigh their positives, some think they are all hot air, and some even think they represent an existential threat to humanity. They\u2019re actually quite easy to build The most surprising thing we\u2019ve learned about LLMs this year is that they\u2019re actually quite easy to build. Intuitively, one would expect that systems this powerful would take millions of lines of complex code. Instead, it turns out a few hundred lines of Python is genuinely enough to train a basic version! What matters most is the training data. You need a lot of data to make these things work, and the quantity and quality of the training data appears to be the most important factor in how good the resulting model is. If you can gather the right data, and afford to pay for the GPUs to train it, you can build an LLM. A year ago, the only organization that had released a generally useful LLM was OpenAI. We\u2019ve now seen better-than-GPT-3 class models produced by Anthropic, Mistral, Google, Meta, EleutherAI, Stability AI, TII in Abu Dhabi (Falcon), Microsoft Research, xAI, Replit, Baidu and a bunch of other organizations. The training cost (hardware and electricity) is still significant\u2014initially millions of dollars, but that seems to have dropped to the tens of thousands already. Microsoft\u2019s Phi-2 claims to have used \u201c14 days on 96 A100 GPUs\u201d, which works out at around $35,000 using current Lambda pricing. So training an LLM still isn\u2019t something a hobbyist can afford, but it\u2019s no longer the sole domain of the super-rich. I like to compare the difficulty of training an LLM to that of building a suspension bridge\u2014not trivial, but hundreds of countries around the world have figured out how to do it. (Correction: Wikipedia\u2019s Suspension bridges by country category lists 44 countries). You can run LLMs on your own devices In January of this year, I thought it would be years before I could run a useful LLM on my own computer. GPT-3 and 3.5 were pretty much the only games in town, and I thought that even if the model weights were available it would take a $10,000+ server to run them. Then in February, Meta released Llama. And a few weeks later in March, Georgi Gerganov released code that got it working on a MacBook. I wrote about how Large language models are having their Stable Diffusion moment, and with hindsight that was a very good call! This unleashed a whirlwind of innovation, which was accelerated further in July when Meta released Llama 2\u2014an improved version which, crucially, included permission for commercial use. Today there are literally thousands of LLMs that can be run locally, on all manner of different devices. I run a bunch of them on my laptop. I run Mistral 7B (a surprisingly great model) on my iPhone. You can install several different apps to get your own, local, completely private LLM. My own LLM project provides a CLI tool for running an array of different models via plugins. You can even run them entirely in your browser using WebAssembly and the latest Chrome! Hobbyists can build their own fine-tuned models I said earlier that building an LLM was still out of reach of hobbyists. That may be true for training from scratch, but fine-tuning one of those models is another matter entirely. There\u2019s now a fascinating ecosystem of people training their own models on top of these foundations, publishing those models, building fine-tuning datasets and sharing those too. The Hugging Face Open LLM Leaderboard is one place that tracks these. I can\u2019t even attempt to count them, and any count would be out-of-date within a few hours. The best overall openly licensed LLM at any time is rarely a foundation model: instead, it\u2019s whichever fine-tuned community model has most recently discovered the best combination of fine-tuning data. This is a huge advantage for open over closed models: the closed, hosted models don\u2019t have thousands of researchers and hobbyists around the world collaborating and competing to improve them. We don\u2019t yet know how to build GPT-4 Frustratingly, despite the enormous leaps ahead we\u2019ve had this year, we are yet to see an alternative model that\u2019s better than GPT-4. OpenAI released GPT-4",
      "class, but at 1B and 3B sizes they punch massively above their weight. I run Llama 3.2 3B on my iPhone using the free MLC Chat iOS app and it\u2019s a shockingly capable model for its tiny (<2GB) size. Try firing it up and asking it for \u201ca plot outline of a Netflix Christmas movie where a data journalist falls in love with a local ceramacist\u201d. Here\u2019s what I got, at a respectable 20 tokens per second: Here\u2019s the rest of the transcript. It\u2019s bland and generic, but my phone can pitch bland and generic Christmas movies to Netflix now! LLM prices crashed, thanks to competition and increased efficiency The past twelve months have seen a dramatic collapse in the cost of running a prompt through the top tier hosted LLMs. In December 2023 (here\u2019s the Internet Archive for the OpenAI pricing page) OpenAI were charging $30/million input tokens for GPT-4, $10/mTok for the then-new GPT-4 Turbo and $1/mTok for GPT-3.5 Turbo. Today $30/mTok gets you OpenAI\u2019s most expensive model, o1. GPT-4o is $2.50 (12x cheaper than GPT-4) and GPT-4o mini is $0.15/mTok\u2014nearly 7x cheaper than GPT-3.5 and massively more capable. Other model providers charge even less. Anthropic\u2019s Claude 3 Haiku (from March, but still their cheapest model) is $0.25/mTok. Google\u2019s Gemini 1.5 Flash is $0.075/mTok and their Gemini 1.5 Flash 8B is $0.0375/mTok\u2014that\u2019s 27x cheaper than GPT-3.5 Turbo last year. I\u2019ve been tracking these pricing changes under my llm-pricing tag. These price drops are driven by two factors: increased competition and increased efficiency. The efficiency thing is really important for everyone who is concerned about the environmental impact of LLMs. These price drops tie directly to how much energy is being used for running prompts. There\u2019s still plenty to worry about with respect to the environmental impact of the great AI datacenter buildout, but a lot of the concerns over the energy cost of individual prompts are no longer credible. Here\u2019s a fun napkin calculation: how much would it cost to generate short descriptions of every one of the 68,000 photos in my personal photo library using Google\u2019s Gemini 1.5 Flash 8B (released in October), their cheapest model? Each photo would need 260 input tokens and around 100 output tokens. 260 * 68,000 = 17,680,000 input tokens 17,680,000 * $0.0375/million = $0.66 100 * 68,000 = 6,800,000 output tokens 6,800,000 * $0.15/million = $1.02 That\u2019s a total cost of $1.68 to process 68,000 images. That\u2019s so absurdly cheap I had to run the numbers three times to confirm I got it right. How good are those descriptions? Here\u2019s what I got from this command: Against this photo of butterflies at the California Academy of Sciences: A shallow dish, likely a hummingbird or butterfly feeder, is red. Pieces of orange slices of fruit are visible inside the dish. Two butterflies are positioned in the feeder, one is a dark brown/black butterfly with white/cream-colored markings. The other is a large, brown butterfly with patterns of lighter brown, beige, and black markings, including prominent eye spots. The larger brown butterfly appears to be feeding on the fruit. 260 input tokens, 92 output tokens. Cost approximately 0.0024 cents (that\u2019s less than a 400th of a cent). This increase in efficiency and reduction in price is my single favourite trend from 2024. I want the utility of LLMs at a fraction of the energy cost and it looks like that\u2019s what we\u2019re getting. Multimodal vision is common, audio and video are starting to emerge My butterfly example above illustrates another key trend from 2024: the rise of multi-modal LLMs. A year ago the single most notable example of these was GPT-4 Vision, released at OpenAI\u2019s DevDay in November 2023. Google\u2019s multi-modal Gemini 1.0 was announced on December 7th 2023 so it also (just) makes it into the 2023 window. In 2024, almost every significant model vendor released multi-modal models. We saw the Claude 3 series from Anthropic in March, Gemini 1.5 Pro in April (images, audio and video), then September brought Qwen2-VL and Mistral\u2019s Pixtral 12B and Meta\u2019s Llama 3.2 11B and 90B vision models. We got audio input and output from OpenAI in October, then November saw SmolVLM from Hugging Face and December saw image and video models from Amazon Nova. In October I upgraded my LLM CLI tool to support multi-modal models via attachments. It now has plugins for a whole collection of different vision models. I think people who complain that LLM improvement has slowed are often missing the enormous advances in these multi-modal models. Being able to run prompts against images (and audio and video) is a fascinating new way to apply these models. Voice and live camera mode are science fiction come to life The audio and live video modes that have started to emerge deserve a special mention. The ability to talk to ChatGPT first arrived in September 2023, but it was mostly an illusion: OpenAI used their excellent Whisper speech-to-text model and a new text-to-speech model (creatively named tts-1) to enable conversations with the ChatGPT mobile apps, but the actual model just saw text. The May 13th announcement of GPT-4o included a demo of a brand new voice mode, where the true multi-modal GPT-4o (the o is for \u201comni\u201d) model could accept audio input and output incredibly realistic sounding speech without needing separate TTS or STT models. The demo also sounded conspicuously similar to Scarlett Johansson... and after she complained the voice from the demo, Skye, never made it to a production product. The delay in releasing the new voice mode after the initial demo caused quite a lot of confusion. I wrote about that in ChatGPT in \u201c4o\u201d mode is not running the new features yet. When ChatGPT Advanced Voice mode finally did roll out (a slow roll from August through September) it was spectacular. I\u2019ve been using it extensively on walks with my dog and it\u2019s amazing how much the improvement in intonation elevates the material. I\u2019ve also had a lot of fun experimenting with",
      "November 4th: Claude 3.5 Haiku 7th: Project: VERDAD\u2014tracking misinformation in radio broadcasts using Gemini 1.5 12th: Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac 19th: Notes from Bing Chat\u2014Our First Encounter With Manipulative AI 25th: Ask questions of SQLite databases and CSV/JSON files in your terminal December 4th: First impressions of the new Amazon Nova LLMs (via a new llm-bedrock plugin) 7th: Prompts.js 9th: I can now run a GPT-4 class model on my laptop 10th: ChatGPT Canvas can make API requests now, but it\u2019s complicated 11th: Gemini 2.0 Flash: An outstanding multi-modal LLM with a sci-fi streaming mode 19th: Building Python tools with a one-shot prompt using uv run and Claude Projects 19th: Gemini 2.0 Flash \u201cThinking mode\u201d 20th: December in LLMs has been a lot 20th: Live blog: the 12th day of OpenAI\u2014\u201cEarly evals for OpenAI o3\u201d 24th: Trying out QvQ\u2014Qwen\u2019s new visual reasoning model 31st: Things we learned about LLMs in 2024 (This list generated using Django SQL Dashboard with a SQL query written for me by Claude.) Posted 31st December 2024 at 6:07 pm \u00b7 Follow me on Mastodon or Twitter or subscribe to my newsletter More recent articles OpenAI o3-mini, now available in LLM - 31st January 2025 A selfish personal argument for releasing code as Open Source - 24th January 2025 Anthropic's new Citations API - 24th January 2025 This is Things we learned about LLMs in 2024 by Simon Willison, posted on 31st December 2024. Part of series LLMs annual review Stuff we figured out about AI in 2023 - Dec. 31, 2023, 11:59 p.m. Things we learned about LLMs in 2024 - Dec. 31, 2024, 6:07 p.m. google\n 345 ai\n 1080 openai\n 252 generative-ai\n 926 llms\n 914 anthropic\n 114 gemini\n 53 meta\n 26 inference-scaling\n 26 long-context\n 10 Next: Ending a year long posting streak Previous: Trying out QvQ - Qwen's new visual reasoning model Colophon \u00a9 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025"
    ]
  },
  {
    "ID": "21c59f57-f329-4a6e-8301-dcf5a258de19",
    "Type:": "MultiContextEvolution",
    "Question": "Considering the themes of increased efficiency and competition in LLMs, and hobbyist involvement in fine-tuning models, how has the competition among organizations contributed to the dramatic reduction in LLM costs, and what role have hobbyists played in enhancing the capabilities of these models?",
    "Answer": "The competition among organizations has significantly contributed to the dramatic reduction in LLM costs by driving increased efficiency and lowering prices. For instance, the cost of running prompts through top-tier hosted LLMs has seen a dramatic collapse over the past year, with prices dropping significantly across various providers due to increased competition. This competition has also been linked to improvements in model efficiency, which directly impacts the cost and environmental concerns associated with running these models. On the other hand, hobbyists have played a crucial role in enhancing the capabilities of LLMs by building their own fine-tuned models. This has created a vibrant ecosystem where hobbyists train models on top of existing foundations, publish these models, and share fine-tuning datasets. This community-driven approach has led to rapid improvements and innovations in LLM capabilities, demonstrating a significant advantage of open over closed models, where thousands of researchers and hobbyists globally collaborate and compete to enhance model performance.",
    "Context": [
      "Simon Willison\u2019s Weblog Subscribe Things we learned about LLMs in 2024 31st December 2024 A lot has happened in the world of Large Language Models over the course of 2024. Here\u2019s a review of things we figured out about the field in the past twelve months, plus my attempt at identifying key themes and pivotal moments. This is a sequel to my review of 2023. In this article: The GPT-4 barrier was comprehensively broken Some of those GPT-4 models run on my laptop LLM prices crashed, thanks to competition and increased efficiency Multimodal vision is common, audio and video are starting to emerge Voice and live camera mode are science fiction come to life Prompt driven app generation is a commodity already Universal access to the best models lasted for just a few short months \u201cAgents\u201d still haven\u2019t really happened yet Evals really matter Apple Intelligence is bad, Apple\u2019s MLX library is excellent The rise of inference-scaling \u201creasoning\u201d models Was the best currently available LLM trained in China for less than $6m? The environmental impact got better The environmental impact got much, much worse The year of slop Synthetic training data works great LLMs somehow got even harder to use Knowledge is incredibly unevenly distributed LLMs need better criticism Everything tagged \u201cllms\u201d on my blog in 2024 The GPT-4 barrier was comprehensively broken In my December 2023 review I wrote about how We don\u2019t yet know how to build GPT-4\u2014OpenAI\u2019s best model was almost a year old at that point, yet no other AI lab had produced anything better. What did OpenAI know that the rest of us didn\u2019t? I\u2019m relieved that this has changed completely in the past twelve months. 18 organizations now have models on the Chatbot Arena Leaderboard that rank higher than the original GPT-4 from March 2023 (GPT-4-0314 on the board)\u201470 models in total. The earliest of those was Google\u2019s Gemini 1.5 Pro, released in February. In addition to producing GPT-4 level outputs, it introduced several brand new capabilities to the field\u2014most notably its 1 million (and then later 2 million) token input context length, and the ability to input video. I wrote about this at the time in The killer app of Gemini Pro 1.5 is video, which earned me a short appearance as a talking head in the Google I/O opening keynote in May. Gemini 1.5 Pro also illustrated one of the key themes of 2024: increased context lengths. Last year most models accepted 4,096 or 8,192 tokens, with the notable exception of Claude 2.1 which accepted 200,000. Today every serious provider has a 100,000+ token model, and Google\u2019s Gemini series accepts up to 2 million. Longer inputs dramatically increase the scope of problems that can be solved with an LLM: you can now throw in an entire book and ask questions about its contents, but more importantly you can feed in a lot of example code to help the model correctly solve a coding problem. LLM use-cases that involve long inputs are far more interesting to me than short prompts that rely purely on the information already baked into the model weights. Many of my tools were built using this pattern. Getting back to models that beat GPT-4: Anthropic\u2019s Claude 3 series launched in March, and Claude 3 Opus quickly became my new favourite daily-driver. They upped the ante even more in June with the launch of Claude 3.5 Sonnet\u2014a model that is still my favourite six months later (though it got a significant upgrade on October 22, confusingly keeping the same 3.5 version number. Anthropic fans have since taken to calling it Claude 3.6). Then there\u2019s the rest. If you browse the Chatbot Arena leaderboard today\u2014still the most useful single place to get a vibes-based evaluation of models\u2014you\u2019ll see that GPT-4-0314 has fallen to around 70th place. The 18 organizations with higher scoring models are Google, OpenAI, Alibaba, Anthropic, Meta, Reka AI, 01 AI, Amazon, Cohere, DeepSeek, Nvidia, Mistral, NexusFlow, Zhipu AI, xAI, AI21 Labs, Princeton and Tencent. Training a GPT-4 beating model was a huge deal in 2023. In 2024 it\u2019s an achievement that isn\u2019t even particularly notable, though I personally still celebrate any time a new organization joins that list. Some of those GPT-4 models run on my laptop My personal laptop is a 64GB M2 MacBook Pro from 2023. It\u2019s a powerful machine, but it\u2019s also nearly two years old now\u2014and crucially it\u2019s the same laptop I\u2019ve been using ever since I first ran an LLM on my computer back in March 2023 (see Large language models are having their Stable Diffusion moment). That same laptop that could just about run a GPT-3-class model in March last year has now run multiple GPT-4 class models! Some of my notes on that: Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac talks about Qwen2.5-Coder-32B in November\u2014an Apache 2.0 licensed model! I can now run a GPT-4 class model on my laptop talks about running Meta\u2019s Llama 3.3 70B (released in December) This remains astonishing to me. I thought a model with the capabilities and output quality of GPT-4 needed a datacenter class server with one or more $40,000+ GPUs. These models take up enough of my 64GB of RAM that I don\u2019t run them often\u2014they don\u2019t leave much room for anything else. The fact that they run at all is a testament to the incredible training and inference performance gains that we\u2019ve figured out over the past year. It turns out there was a lot of low-hanging fruit to be harvested in terms of model efficiency. I expect there\u2019s still more to come. Meta\u2019s Llama 3.2 models deserve a special mention. They may not be GPT-4 class, but at 1B and 3B sizes they punch massively above their weight. I run Llama 3.2 3B on my iPhone using the free MLC Chat iOS app and it\u2019s a shockingly capable model for its tiny (<2GB) size. Try firing it up and asking it for \u201ca plot outline",
      "class, but at 1B and 3B sizes they punch massively above their weight. I run Llama 3.2 3B on my iPhone using the free MLC Chat iOS app and it\u2019s a shockingly capable model for its tiny (<2GB) size. Try firing it up and asking it for \u201ca plot outline of a Netflix Christmas movie where a data journalist falls in love with a local ceramacist\u201d. Here\u2019s what I got, at a respectable 20 tokens per second: Here\u2019s the rest of the transcript. It\u2019s bland and generic, but my phone can pitch bland and generic Christmas movies to Netflix now! LLM prices crashed, thanks to competition and increased efficiency The past twelve months have seen a dramatic collapse in the cost of running a prompt through the top tier hosted LLMs. In December 2023 (here\u2019s the Internet Archive for the OpenAI pricing page) OpenAI were charging $30/million input tokens for GPT-4, $10/mTok for the then-new GPT-4 Turbo and $1/mTok for GPT-3.5 Turbo. Today $30/mTok gets you OpenAI\u2019s most expensive model, o1. GPT-4o is $2.50 (12x cheaper than GPT-4) and GPT-4o mini is $0.15/mTok\u2014nearly 7x cheaper than GPT-3.5 and massively more capable. Other model providers charge even less. Anthropic\u2019s Claude 3 Haiku (from March, but still their cheapest model) is $0.25/mTok. Google\u2019s Gemini 1.5 Flash is $0.075/mTok and their Gemini 1.5 Flash 8B is $0.0375/mTok\u2014that\u2019s 27x cheaper than GPT-3.5 Turbo last year. I\u2019ve been tracking these pricing changes under my llm-pricing tag. These price drops are driven by two factors: increased competition and increased efficiency. The efficiency thing is really important for everyone who is concerned about the environmental impact of LLMs. These price drops tie directly to how much energy is being used for running prompts. There\u2019s still plenty to worry about with respect to the environmental impact of the great AI datacenter buildout, but a lot of the concerns over the energy cost of individual prompts are no longer credible. Here\u2019s a fun napkin calculation: how much would it cost to generate short descriptions of every one of the 68,000 photos in my personal photo library using Google\u2019s Gemini 1.5 Flash 8B (released in October), their cheapest model? Each photo would need 260 input tokens and around 100 output tokens. 260 * 68,000 = 17,680,000 input tokens 17,680,000 * $0.0375/million = $0.66 100 * 68,000 = 6,800,000 output tokens 6,800,000 * $0.15/million = $1.02 That\u2019s a total cost of $1.68 to process 68,000 images. That\u2019s so absurdly cheap I had to run the numbers three times to confirm I got it right. How good are those descriptions? Here\u2019s what I got from this command: Against this photo of butterflies at the California Academy of Sciences: A shallow dish, likely a hummingbird or butterfly feeder, is red. Pieces of orange slices of fruit are visible inside the dish. Two butterflies are positioned in the feeder, one is a dark brown/black butterfly with white/cream-colored markings. The other is a large, brown butterfly with patterns of lighter brown, beige, and black markings, including prominent eye spots. The larger brown butterfly appears to be feeding on the fruit. 260 input tokens, 92 output tokens. Cost approximately 0.0024 cents (that\u2019s less than a 400th of a cent). This increase in efficiency and reduction in price is my single favourite trend from 2024. I want the utility of LLMs at a fraction of the energy cost and it looks like that\u2019s what we\u2019re getting. Multimodal vision is common, audio and video are starting to emerge My butterfly example above illustrates another key trend from 2024: the rise of multi-modal LLMs. A year ago the single most notable example of these was GPT-4 Vision, released at OpenAI\u2019s DevDay in November 2023. Google\u2019s multi-modal Gemini 1.0 was announced on December 7th 2023 so it also (just) makes it into the 2023 window. In 2024, almost every significant model vendor released multi-modal models. We saw the Claude 3 series from Anthropic in March, Gemini 1.5 Pro in April (images, audio and video), then September brought Qwen2-VL and Mistral\u2019s Pixtral 12B and Meta\u2019s Llama 3.2 11B and 90B vision models. We got audio input and output from OpenAI in October, then November saw SmolVLM from Hugging Face and December saw image and video models from Amazon Nova. In October I upgraded my LLM CLI tool to support multi-modal models via attachments. It now has plugins for a whole collection of different vision models. I think people who complain that LLM improvement has slowed are often missing the enormous advances in these multi-modal models. Being able to run prompts against images (and audio and video) is a fascinating new way to apply these models. Voice and live camera mode are science fiction come to life The audio and live video modes that have started to emerge deserve a special mention. The ability to talk to ChatGPT first arrived in September 2023, but it was mostly an illusion: OpenAI used their excellent Whisper speech-to-text model and a new text-to-speech model (creatively named tts-1) to enable conversations with the ChatGPT mobile apps, but the actual model just saw text. The May 13th announcement of GPT-4o included a demo of a brand new voice mode, where the true multi-modal GPT-4o (the o is for \u201comni\u201d) model could accept audio input and output incredibly realistic sounding speech without needing separate TTS or STT models. The demo also sounded conspicuously similar to Scarlett Johansson... and after she complained the voice from the demo, Skye, never made it to a production product. The delay in releasing the new voice mode after the initial demo caused quite a lot of confusion. I wrote about that in ChatGPT in \u201c4o\u201d mode is not running the new features yet. When ChatGPT Advanced Voice mode finally did roll out (a slow roll from August through September) it was spectacular. I\u2019ve been using it extensively on walks with my dog and it\u2019s amazing how much the improvement in intonation elevates the material. I\u2019ve also had a lot of fun experimenting with",
      "Simon Willison\u2019s Weblog Subscribe Stuff we figured out about AI in 2023 31st December 2023 2023 was the breakthrough year for Large Language Models (LLMs). I think it\u2019s OK to call these AI\u2014they\u2019re the latest and (currently) most interesting development in the academic field of Artificial Intelligence that dates back to the 1950s. Here\u2019s my attempt to round up the highlights in one place! Large Language Models They\u2019re actually quite easy to build You can run LLMs on your own devices Hobbyists can build their own fine-tuned models We don\u2019t yet know how to build GPT-4 Vibes Based Development LLMs are really smart, and also really, really dumb Gullibility is the biggest unsolved problem Code may be the best application The ethics of this space remain diabolically complex My blog in 2023 Here\u2019s the sequel to this post: Things we learned about LLMs in 2024. Large Language Models In the past 24-36 months, our species has discovered that you can take a GIANT corpus of text, run it through a pile of GPUs, and use it to create a fascinating new kind of software. LLMs can do a lot of things. They can answer questions, summarize documents, translate from one language to another, extract information and even write surprisingly competent code. They can also help you cheat at your homework, generate unlimited streams of fake content and be used for all manner of nefarious purposes. So far, I think they\u2019re a net positive. I\u2019ve used them on a personal level to improve my productivity (and entertain myself) in all sorts of different ways. I think people who learn how to use them effectively can gain a significant boost to their quality of life. A lot of people are yet to be sold on their value! Some think their negatives outweigh their positives, some think they are all hot air, and some even think they represent an existential threat to humanity. They\u2019re actually quite easy to build The most surprising thing we\u2019ve learned about LLMs this year is that they\u2019re actually quite easy to build. Intuitively, one would expect that systems this powerful would take millions of lines of complex code. Instead, it turns out a few hundred lines of Python is genuinely enough to train a basic version! What matters most is the training data. You need a lot of data to make these things work, and the quantity and quality of the training data appears to be the most important factor in how good the resulting model is. If you can gather the right data, and afford to pay for the GPUs to train it, you can build an LLM. A year ago, the only organization that had released a generally useful LLM was OpenAI. We\u2019ve now seen better-than-GPT-3 class models produced by Anthropic, Mistral, Google, Meta, EleutherAI, Stability AI, TII in Abu Dhabi (Falcon), Microsoft Research, xAI, Replit, Baidu and a bunch of other organizations. The training cost (hardware and electricity) is still significant\u2014initially millions of dollars, but that seems to have dropped to the tens of thousands already. Microsoft\u2019s Phi-2 claims to have used \u201c14 days on 96 A100 GPUs\u201d, which works out at around $35,000 using current Lambda pricing. So training an LLM still isn\u2019t something a hobbyist can afford, but it\u2019s no longer the sole domain of the super-rich. I like to compare the difficulty of training an LLM to that of building a suspension bridge\u2014not trivial, but hundreds of countries around the world have figured out how to do it. (Correction: Wikipedia\u2019s Suspension bridges by country category lists 44 countries). You can run LLMs on your own devices In January of this year, I thought it would be years before I could run a useful LLM on my own computer. GPT-3 and 3.5 were pretty much the only games in town, and I thought that even if the model weights were available it would take a $10,000+ server to run them. Then in February, Meta released Llama. And a few weeks later in March, Georgi Gerganov released code that got it working on a MacBook. I wrote about how Large language models are having their Stable Diffusion moment, and with hindsight that was a very good call! This unleashed a whirlwind of innovation, which was accelerated further in July when Meta released Llama 2\u2014an improved version which, crucially, included permission for commercial use. Today there are literally thousands of LLMs that can be run locally, on all manner of different devices. I run a bunch of them on my laptop. I run Mistral 7B (a surprisingly great model) on my iPhone. You can install several different apps to get your own, local, completely private LLM. My own LLM project provides a CLI tool for running an array of different models via plugins. You can even run them entirely in your browser using WebAssembly and the latest Chrome! Hobbyists can build their own fine-tuned models I said earlier that building an LLM was still out of reach of hobbyists. That may be true for training from scratch, but fine-tuning one of those models is another matter entirely. There\u2019s now a fascinating ecosystem of people training their own models on top of these foundations, publishing those models, building fine-tuning datasets and sharing those too. The Hugging Face Open LLM Leaderboard is one place that tracks these. I can\u2019t even attempt to count them, and any count would be out-of-date within a few hours. The best overall openly licensed LLM at any time is rarely a foundation model: instead, it\u2019s whichever fine-tuned community model has most recently discovered the best combination of fine-tuning data. This is a huge advantage for open over closed models: the closed, hosted models don\u2019t have thousands of researchers and hobbyists around the world collaborating and competing to improve them. We don\u2019t yet know how to build GPT-4 Frustratingly, despite the enormous leaps ahead we\u2019ve had this year, we are yet to see an alternative model that\u2019s better than GPT-4. OpenAI released GPT-4"
    ]
  },
  {
    "ID": "ec76773e-544b-4d4f-ac1b-9396381e2dcd",
    "Type:": "MultiContextEvolution",
    "Question": "Considering the significant role of training data in AI model development, how does the use of synthetic data compare to organic data in terms of structuring and facilitating model learning, and what are the implications of this for the competition among AI labs to develop more advanced models?",
    "Answer": "Synthetic data, as used in AI model development, offers several direct advantages over organic data, particularly in structuring and facilitating model learning. In organic datasets, the relationship between tokens is often complex and indirect, requiring many reasoning steps to connect one token to the next. This complexity makes it challenging for models to learn effectively from next-token prediction. By contrast, synthetic data is structured such that each token generated by a language model is predicted by the preceding tokens, simplifying the learning process and making it easier for models to follow reasoning patterns. This structured approach not only enhances the learning efficiency of AI models but also positions synthetic data as a substantial component of pretraining. The use of synthetic data is becoming increasingly common among AI labs, which deliberately create artificial data to help steer their models in the right way. This strategic use of synthetic data is part of the competition among AI labs to develop more advanced models, as it allows for more controlled and effective training processes.",
    "Context": [
      "definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014 both the positives and the negatives. \u2018Ignore that email, it\u2019s spam,\u2019 and \u2018Ignore that article, it\u2019s slop,\u2019 are both useful lessons. I love the term \u201cslop\u201d because it so succinctly captures one of the ways we should not be using generative AI! Slop was even in the running for Oxford Word of the Year 2024, but it lost to brain rot. Synthetic training data works great An idea that surprisingly seems to have stuck in the public consciousness is that of \u201cmodel collapse\u201d. This was first described in the paper The Curse of Recursion: Training on Generated Data Makes Models Forget in May 2023, and repeated in Nature in July 2024 with the more eye-catching headline AI models collapse when trained on recursively generated data. The idea is seductive: as the internet floods with AI-generated slop the models themselves will degenerate, feeding on their own output in a way that leads to their inevitable demise! That\u2019s clearly not happening. Instead, we are seeing AI labs increasingly train on synthetic content\u2014deliberately creating artificial data to help steer their models in the right way. One of the best descriptions I\u2019ve seen of this comes from the Phi-4 technical report, which included this: Synthetic data as a substantial component of pretraining is becoming increasingly common, and the Phi series of models has consistently emphasized the importance of synthetic data. Rather than serving as a cheap substitute for organic data, synthetic data has several direct advantages over organic data. Structured and Gradual Learning. In organic datasets, the relationship between tokens is often complex and indirect. Many reasoning steps may be required to connect the current token to the next, making it challenging for the model to learn effectively from next-token prediction. By contrast, each token generated by a language model is by definition predicted by the preceding tokens, making it easier for a model to follow the resulting reasoning patterns. Another common technique is to use larger models to help create training data for their smaller, cheaper alternatives\u2014a trick used by an increasing number of labs. DeepSeek v3 used \u201creasoning\u201d data created by DeepSeek-R1. Meta\u2019s Llama 3.3 70B fine-tuning used over 25M synthetically generated examples. Careful design of the training data that goes into an LLM appears to be the entire game for creating these models. The days of just grabbing a full scrape of the web and indiscriminately dumping it into a training run are long gone. LLMs somehow got even harder to use A drum I\u2019ve been banging for a while is that LLMs are power-user tools\u2014they\u2019re chainsaws disguised as kitchen knives. They look deceptively simple to use\u2014how hard can it be to type messages to a chatbot?\u2014but in reality you need a huge depth of both understanding and experience to make the most of them and avoid their many pitfalls. If anything, this problem got worse in 2024. We\u2019ve built computer systems you can talk to in human language, that will answer your questions and usually get them right! ... depending on the question, and how you ask it, and whether it\u2019s accurately reflected in the undocumented and secret training set. The number of available systems has exploded. Different systems have different tools they can apply to your problems\u2014like Python and JavaScript and web search and image generation and maybe even database lookups... so you\u2019d better understand what those tools are, what they can do and how to tell if the LLM used them or not. Did you know ChatGPT has two entirely different ways of running Python now? Want to build a Claude Artifact that talks to an external API? You\u2019d better understand CSP and CORS HTTP headers first. The models may have got more capable, but most of the limitations remained the same. OpenAI\u2019s o1 may finally be able to (mostly) count the Rs in strawberry, but its abilities are still limited by its nature as an LLM and the constraints placed on it by the harness it\u2019s running in. o1 can\u2019t run web searches or use Code Interpreter, but GPT-4o can\u2014both in that same ChatGPT UI. (o1 will pretend to do those things if you ask it to, a regression to the URL hallucinations bug from early 2023). What are we doing about this? Not much. Most users are thrown in at the deep end. The default LLM chat UI is like taking brand new computer users, dropping them into a Linux terminal and expecting them to figure it all out. Meanwhile, it\u2019s increasingly common for end users to develop wildly inaccurate mental models of how these things work and what they are capable of. I\u2019ve seen so many examples of people trying to win an argument with a screenshot from ChatGPT\u2014an inherently ludicrous proposition, given the inherent unreliability of these models crossed with the fact that you can get them to say anything if you prompt them right. There\u2019s a flipside to this too: a lot of better informed people have sworn off LLMs entirely because they can\u2019t see how anyone could benefit from a tool with so many flaws. The key skill in getting the most out of LLMs is learning to work with tech that is both inherently unreliable and incredibly powerful at the same time. This is a decidedly non-obvious skill to acquire! There is so much space for helpful education content here, but we need to do do a lot better than outsourcing it all to AI grifters with bombastic Twitter threads. Knowledge is incredibly unevenly distributed Most people have heard of ChatGPT by now. How many have heard of Claude? The knowledge gap between the people who actively follow this stuff and the 99% of the population who do not is vast.",
      "models don\u2019t have thousands of researchers and hobbyists around the world collaborating and competing to improve them. We don\u2019t yet know how to build GPT-4 Frustratingly, despite the enormous leaps ahead we\u2019ve had this year, we are yet to see an alternative model that\u2019s better than GPT-4. OpenAI released GPT-4 in March, though it later turned out we had a sneak peak of it in February when Microsoft used it as part of the new Bing. This may well change in the next few weeks: Google\u2019s Gemini Ultra has big claims, but isn\u2019t yet available for us to try out. The team behind Mistral are working to beat GPT-4 as well, and their track record is already extremely strong considering their first public model only came out in September, and they\u2019ve released two significant improvements since then. Still, I\u2019m surprised that no-one has beaten the now almost year old GPT-4 by now. OpenAI clearly have some substantial tricks that they haven\u2019t shared yet. Vibes Based Development As a computer scientist and software engineer, LLMs are infuriating. Even the openly licensed ones are still the world\u2019s most convoluted black boxes. We continue to have very little idea what they can do, how exactly they work and how best to control them. I\u2019m used to programming where the computer does exactly what I tell it to do. Prompting an LLM is decidedly not that! The worst part is the challenge of evaluating them. There are plenty of benchmarks, but no benchmark is going to tell you if an LLM actually \u201cfeels\u201d right when you try it for a given task. I find I have to work with an LLM for a few weeks in order to get a good intuition for it\u2019s strengths and weaknesses. This greatly limits how many I can evaluate myself! The most frustrating thing for me is at the level of individual prompting. Sometimes I\u2019ll tweak a prompt and capitalize some of the words in it, to emphasize that I really want it to OUTPUT VALID MARKDOWN or similar. Did capitalizing those words make a difference? I still don\u2019t have a good methodology for figuring that out. We\u2019re left with what\u2019s effectively Vibes Based Development. It\u2019s vibes all the way down. I\u2019d love to see us move beyond vibes in 2024! LLMs are really smart, and also really, really dumb On the one hand, we keep on finding new things that LLMs can do that we didn\u2019t expect\u2014and that the people who trained the models didn\u2019t expect either. That\u2019s usually really fun! But on the other hand, the things you sometimes have to do to get the models to behave are often incredibly dumb. Does ChatGPT get lazy in December, because its hidden system prompt includes the current date and its training data shows that people provide less useful answers coming up to the holidays? The honest answer is \u201cmaybe\u201d! No-one is entirely sure, but if you give it a different date its answers may skew slightly longer. Sometimes it omits sections of code and leaves you to fill them in, but if you tell it you can\u2019t type because you don\u2019t have any fingers it produces the full code for you instead. There are so many more examples like this. Offer it cash tips for better answers. Tell it your career depends on it. Give it positive reinforcement. It\u2019s all so dumb, but it works! Gullibility is the biggest unsolved problem I coined the term prompt injection in September last year. 15 months later, I regret to say that we\u2019re still no closer to a robust, dependable solution to this problem. I\u2019ve written a ton about this already. Beyond that specific class of security vulnerabilities, I\u2019ve started seeing this as a wider problem of gullibility. Language Models are gullible. They \u201cbelieve\u201d what we tell them\u2014what\u2019s in their training data, then what\u2019s in the fine-tuning data, then what\u2019s in the prompt. In order to be useful tools for us, we need them to believe what we feed them! But it turns out a lot of the things we want to build need them not to be gullible. Everyone wants an AI personal assistant. If you hired a real-world personal assistant who believed everything that anyone told them, you would quickly find that their ability to positively impact your life was severely limited. A lot of people are excited about AI agents\u2014an infuriatingly vague term that seems to be converging on \u201cAI systems that can go away and act on your behalf\u201d. We\u2019ve been talking about them all year, but I\u2019ve seen few if any examples of them running in production, despite lots of exciting prototypes. I think this is because of gullibility. Can we solve this? Honestly, I\u2019m beginning to suspect that you can\u2019t fully solve gullibility without achieving AGI. So it may be quite a while before those agent dreams can really start to come true! Code may be the best application Over the course of the year, it\u2019s become increasingly clear that writing code is one of the things LLMs are most capable of. If you think about what they do, this isn\u2019t such a big surprise. The grammar rules of programming languages like Python and JavaScript are massively less complicated than the grammar of Chinese, Spanish or English. It\u2019s still astonishing to me how effective they are though. One of the great weaknesses of LLMs is their tendency to hallucinate\u2014to imagine things that don\u2019t correspond to reality. You would expect this to be a particularly bad problem for code\u2014if an LLM hallucinates a method that doesn\u2019t exist, the code should be useless. Except... you can run generated code to see if it\u2019s correct. And with patterns like ChatGPT Code Interpreter the LLM can execute the code itself, process the error message, then rewrite it and keep trying until it works! So hallucination is a much lesser problem for code generation than for anything else. If only we had the equivalent of Code Interpreter for fact-checking",
      "Simon Willison\u2019s Weblog Subscribe Stuff we figured out about AI in 2023 31st December 2023 2023 was the breakthrough year for Large Language Models (LLMs). I think it\u2019s OK to call these AI\u2014they\u2019re the latest and (currently) most interesting development in the academic field of Artificial Intelligence that dates back to the 1950s. Here\u2019s my attempt to round up the highlights in one place! Large Language Models They\u2019re actually quite easy to build You can run LLMs on your own devices Hobbyists can build their own fine-tuned models We don\u2019t yet know how to build GPT-4 Vibes Based Development LLMs are really smart, and also really, really dumb Gullibility is the biggest unsolved problem Code may be the best application The ethics of this space remain diabolically complex My blog in 2023 Here\u2019s the sequel to this post: Things we learned about LLMs in 2024. Large Language Models In the past 24-36 months, our species has discovered that you can take a GIANT corpus of text, run it through a pile of GPUs, and use it to create a fascinating new kind of software. LLMs can do a lot of things. They can answer questions, summarize documents, translate from one language to another, extract information and even write surprisingly competent code. They can also help you cheat at your homework, generate unlimited streams of fake content and be used for all manner of nefarious purposes. So far, I think they\u2019re a net positive. I\u2019ve used them on a personal level to improve my productivity (and entertain myself) in all sorts of different ways. I think people who learn how to use them effectively can gain a significant boost to their quality of life. A lot of people are yet to be sold on their value! Some think their negatives outweigh their positives, some think they are all hot air, and some even think they represent an existential threat to humanity. They\u2019re actually quite easy to build The most surprising thing we\u2019ve learned about LLMs this year is that they\u2019re actually quite easy to build. Intuitively, one would expect that systems this powerful would take millions of lines of complex code. Instead, it turns out a few hundred lines of Python is genuinely enough to train a basic version! What matters most is the training data. You need a lot of data to make these things work, and the quantity and quality of the training data appears to be the most important factor in how good the resulting model is. If you can gather the right data, and afford to pay for the GPUs to train it, you can build an LLM. A year ago, the only organization that had released a generally useful LLM was OpenAI. We\u2019ve now seen better-than-GPT-3 class models produced by Anthropic, Mistral, Google, Meta, EleutherAI, Stability AI, TII in Abu Dhabi (Falcon), Microsoft Research, xAI, Replit, Baidu and a bunch of other organizations. The training cost (hardware and electricity) is still significant\u2014initially millions of dollars, but that seems to have dropped to the tens of thousands already. Microsoft\u2019s Phi-2 claims to have used \u201c14 days on 96 A100 GPUs\u201d, which works out at around $35,000 using current Lambda pricing. So training an LLM still isn\u2019t something a hobbyist can afford, but it\u2019s no longer the sole domain of the super-rich. I like to compare the difficulty of training an LLM to that of building a suspension bridge\u2014not trivial, but hundreds of countries around the world have figured out how to do it. (Correction: Wikipedia\u2019s Suspension bridges by country category lists 44 countries). You can run LLMs on your own devices In January of this year, I thought it would be years before I could run a useful LLM on my own computer. GPT-3 and 3.5 were pretty much the only games in town, and I thought that even if the model weights were available it would take a $10,000+ server to run them. Then in February, Meta released Llama. And a few weeks later in March, Georgi Gerganov released code that got it working on a MacBook. I wrote about how Large language models are having their Stable Diffusion moment, and with hindsight that was a very good call! This unleashed a whirlwind of innovation, which was accelerated further in July when Meta released Llama 2\u2014an improved version which, crucially, included permission for commercial use. Today there are literally thousands of LLMs that can be run locally, on all manner of different devices. I run a bunch of them on my laptop. I run Mistral 7B (a surprisingly great model) on my iPhone. You can install several different apps to get your own, local, completely private LLM. My own LLM project provides a CLI tool for running an array of different models via plugins. You can even run them entirely in your browser using WebAssembly and the latest Chrome! Hobbyists can build their own fine-tuned models I said earlier that building an LLM was still out of reach of hobbyists. That may be true for training from scratch, but fine-tuning one of those models is another matter entirely. There\u2019s now a fascinating ecosystem of people training their own models on top of these foundations, publishing those models, building fine-tuning datasets and sharing those too. The Hugging Face Open LLM Leaderboard is one place that tracks these. I can\u2019t even attempt to count them, and any count would be out-of-date within a few hours. The best overall openly licensed LLM at any time is rarely a foundation model: instead, it\u2019s whichever fine-tuned community model has most recently discovered the best combination of fine-tuning data. This is a huge advantage for open over closed models: the closed, hosted models don\u2019t have thousands of researchers and hobbyists around the world collaborating and competing to improve them. We don\u2019t yet know how to build GPT-4 Frustratingly, despite the enormous leaps ahead we\u2019ve had this year, we are yet to see an alternative model that\u2019s better than GPT-4. OpenAI released GPT-4"
    ]
  },
  {
    "ID": "8e8bee91-f429-4ff1-af24-3b892486da3f",
    "Type:": "MultiContextEvolution",
    "Question": "Considering the themes of AI training techniques and running LLMs on personal devices, how has the approach to training AI models evolved to include synthetic data, and what are the implications for running these models on personal devices?",
    "Answer": "The approach to training AI models has evolved significantly to include the use of synthetic data, which is deliberately created artificial data that helps steer models in the right direction. This method is becoming increasingly common as it offers several direct advantages over organic data, such as structured and gradual learning, where the relationship between tokens is more straightforward, making it easier for models to learn effectively from next-token prediction. This evolution in training techniques has implications for running LLMs on personal devices, as it allows for the creation of more efficient models that can be operated on less powerful hardware. For instance, models like Meta's Llama and DeepSeek's versions have been fine-tuned with substantial amounts of synthetically generated examples, enabling them to be run on personal devices more feasibly. This shift not only makes AI more accessible to a broader range of users but also enhances the practical usability of AI in everyday applications.",
    "Context": [
      "definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014 both the positives and the negatives. \u2018Ignore that email, it\u2019s spam,\u2019 and \u2018Ignore that article, it\u2019s slop,\u2019 are both useful lessons. I love the term \u201cslop\u201d because it so succinctly captures one of the ways we should not be using generative AI! Slop was even in the running for Oxford Word of the Year 2024, but it lost to brain rot. Synthetic training data works great An idea that surprisingly seems to have stuck in the public consciousness is that of \u201cmodel collapse\u201d. This was first described in the paper The Curse of Recursion: Training on Generated Data Makes Models Forget in May 2023, and repeated in Nature in July 2024 with the more eye-catching headline AI models collapse when trained on recursively generated data. The idea is seductive: as the internet floods with AI-generated slop the models themselves will degenerate, feeding on their own output in a way that leads to their inevitable demise! That\u2019s clearly not happening. Instead, we are seeing AI labs increasingly train on synthetic content\u2014deliberately creating artificial data to help steer their models in the right way. One of the best descriptions I\u2019ve seen of this comes from the Phi-4 technical report, which included this: Synthetic data as a substantial component of pretraining is becoming increasingly common, and the Phi series of models has consistently emphasized the importance of synthetic data. Rather than serving as a cheap substitute for organic data, synthetic data has several direct advantages over organic data. Structured and Gradual Learning. In organic datasets, the relationship between tokens is often complex and indirect. Many reasoning steps may be required to connect the current token to the next, making it challenging for the model to learn effectively from next-token prediction. By contrast, each token generated by a language model is by definition predicted by the preceding tokens, making it easier for a model to follow the resulting reasoning patterns. Another common technique is to use larger models to help create training data for their smaller, cheaper alternatives\u2014a trick used by an increasing number of labs. DeepSeek v3 used \u201creasoning\u201d data created by DeepSeek-R1. Meta\u2019s Llama 3.3 70B fine-tuning used over 25M synthetically generated examples. Careful design of the training data that goes into an LLM appears to be the entire game for creating these models. The days of just grabbing a full scrape of the web and indiscriminately dumping it into a training run are long gone. LLMs somehow got even harder to use A drum I\u2019ve been banging for a while is that LLMs are power-user tools\u2014they\u2019re chainsaws disguised as kitchen knives. They look deceptively simple to use\u2014how hard can it be to type messages to a chatbot?\u2014but in reality you need a huge depth of both understanding and experience to make the most of them and avoid their many pitfalls. If anything, this problem got worse in 2024. We\u2019ve built computer systems you can talk to in human language, that will answer your questions and usually get them right! ... depending on the question, and how you ask it, and whether it\u2019s accurately reflected in the undocumented and secret training set. The number of available systems has exploded. Different systems have different tools they can apply to your problems\u2014like Python and JavaScript and web search and image generation and maybe even database lookups... so you\u2019d better understand what those tools are, what they can do and how to tell if the LLM used them or not. Did you know ChatGPT has two entirely different ways of running Python now? Want to build a Claude Artifact that talks to an external API? You\u2019d better understand CSP and CORS HTTP headers first. The models may have got more capable, but most of the limitations remained the same. OpenAI\u2019s o1 may finally be able to (mostly) count the Rs in strawberry, but its abilities are still limited by its nature as an LLM and the constraints placed on it by the harness it\u2019s running in. o1 can\u2019t run web searches or use Code Interpreter, but GPT-4o can\u2014both in that same ChatGPT UI. (o1 will pretend to do those things if you ask it to, a regression to the URL hallucinations bug from early 2023). What are we doing about this? Not much. Most users are thrown in at the deep end. The default LLM chat UI is like taking brand new computer users, dropping them into a Linux terminal and expecting them to figure it all out. Meanwhile, it\u2019s increasingly common for end users to develop wildly inaccurate mental models of how these things work and what they are capable of. I\u2019ve seen so many examples of people trying to win an argument with a screenshot from ChatGPT\u2014an inherently ludicrous proposition, given the inherent unreliability of these models crossed with the fact that you can get them to say anything if you prompt them right. There\u2019s a flipside to this too: a lot of better informed people have sworn off LLMs entirely because they can\u2019t see how anyone could benefit from a tool with so many flaws. The key skill in getting the most out of LLMs is learning to work with tech that is both inherently unreliable and incredibly powerful at the same time. This is a decidedly non-obvious skill to acquire! There is so much space for helpful education content here, but we need to do do a lot better than outsourcing it all to AI grifters with bombastic Twitter threads. Knowledge is incredibly unevenly distributed Most people have heard of ChatGPT by now. How many have heard of Claude? The knowledge gap between the people who actively follow this stuff and the 99% of the population who do not is vast.",
      "that it opens up a new way to scale a model: instead of improving model performance purely through additional compute at training time, models can now take on harder problems by spending more compute on inference. The sequel to o1, o3 (they skipped \u201co2\u201d for European trademark reasons) was announced on 20th December with an impressive result against the ARC-AGI benchmark, albeit one that likely involved more than $1,000,000 of compute time expense! o3 is expected to ship in January. I doubt many people have real-world problems that would benefit from that level of compute expenditure\u2014I certainly don\u2019t!\u2014but it appears to be a genuine next step in LLM architecture for taking on much harder problems. OpenAI are not the only game in town here. Google released their first entrant in the category, gemini-2.0-flash-thinking-exp, on December 19th. Alibaba\u2019s Qwen team released their QwQ model on November 28th\u2014under an Apache 2.0 license, and that one I could run on my own machine. They followed that up with a vision reasoning model called QvQ on December 24th, which I also ran locally. DeepSeek made their DeepSeek-R1-Lite-Preview model available to try out through their chat interface on November 20th. To understand more about inference scaling I recommend Is AI progress slowing down? by Arvind Narayanan and Sayash Kapoor. Nothing yet from Anthropic or Meta but I would be very surprised if they don\u2019t have their own inference-scaling models in the works. Meta published a relevant paper Training Large Language Models to Reason in a Continuous Latent Space in December. Was the best currently available LLM trained in China for less than $6m? Not quite, but almost! It does make for a great attention-grabbing headline. The big news to end the year was the release of DeepSeek v3\u2014dropped on Hugging Face on Christmas Day without so much as a README file, then followed by documentation and a paper the day after that. DeepSeek v3 is a huge 685B parameter model\u2014one of the largest openly licensed models currently available, significantly bigger than the largest of Meta\u2019s Llama series, Llama 3.1 405B. Benchmarks put it up there with Claude 3.5 Sonnet. Vibe benchmarks (aka the Chatbot Arena) currently rank it 7th, just behind the Gemini 2.0 and OpenAI 4o/o1 models. This is by far the highest ranking openly licensed model. The really impressive thing about DeepSeek v3 is the training cost. The model was trained on 2,788,000 H800 GPU hours at an estimated cost of $5,576,000. Llama 3.1 405B trained 30,840,000 GPU hours\u201411x that used by DeepSeek v3, for a model that benchmarks slightly worse. Those US export regulations on GPUs to China seem to have inspired some very effective training optimizations! The environmental impact got better A welcome result of the increased efficiency of the models\u2014both the hosted ones and the ones I can run locally\u2014is that the energy usage and environmental impact of running a prompt has dropped enormously over the past couple of years. OpenAI themselves are charging 100x less for a prompt compared to the GPT-3 days. I have it on good authority that neither Google Gemini nor Amazon Nova (two of the least expensive model providers) are running prompts at a loss. I think this means that, as individual users, we don\u2019t need to feel any guilt at all for the energy consumed by the vast majority of our prompts. The impact is likely neglible compared to driving a car down the street or maybe even watching a video on YouTube. Likewise, training. DeepSeek v3 training for less than $6m is a fantastic sign that training costs can and should continue to drop. For less efficient models I find it useful to compare their energy usage to commercial flights. The largest Llama 3 model cost about the same as a single digit number of fully loaded passenger flights from New York to London. That\u2019s certainly not nothing, but once trained that model can be used by millions of people at no extra training cost. The environmental impact got much, much worse The much bigger problem here is the enormous competitive buildout of the infrastructure that is imagined to be necessary for these models in the future. Companies like Google, Meta, Microsoft and Amazon are all spending billions of dollars rolling out new datacenters, with a very material impact on the electricity grid and the environment. There\u2019s even talk of spinning up new nuclear power stations, but those can take decades. Is this infrastructure necessary? DeepSeek v3\u2019s $6m training cost and the continued crash in LLM prices might hint that it\u2019s not. But would you want to be the big tech executive that argued NOT to build out this infrastructure only to be proven wrong in a few years\u2019 time? An interesting point of comparison here could be the way railways rolled out around the world in the 1800s. Constructing these required enormous investments and had a massive environmental impact, and many of the lines that were built turned out to be unnecessary\u2014sometimes multiple lines from different companies serving the exact same routes! The resulting bubbles contributed to several financial crashes, see Wikipedia for Panic of 1873, Panic of 1893, Panic of 1901 and the UK\u2019s Railway Mania. They left us with a lot of useful infrastructure and a great deal of bankruptcies and environmental damage. The year of slop 2024 was the year that the word \"slop\" became a term of art. I wrote about this in May, expanding on this tweet by @deepfates: Watching in real time as \u201cslop\u201d becomes a term of art. the way that \u201cspam\u201d became the term for unwanted emails, \u201cslop\u201d is going in the dictionary as the term for unwanted AI generated content I expanded that definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014",
      "Simon Willison\u2019s Weblog Subscribe Stuff we figured out about AI in 2023 31st December 2023 2023 was the breakthrough year for Large Language Models (LLMs). I think it\u2019s OK to call these AI\u2014they\u2019re the latest and (currently) most interesting development in the academic field of Artificial Intelligence that dates back to the 1950s. Here\u2019s my attempt to round up the highlights in one place! Large Language Models They\u2019re actually quite easy to build You can run LLMs on your own devices Hobbyists can build their own fine-tuned models We don\u2019t yet know how to build GPT-4 Vibes Based Development LLMs are really smart, and also really, really dumb Gullibility is the biggest unsolved problem Code may be the best application The ethics of this space remain diabolically complex My blog in 2023 Here\u2019s the sequel to this post: Things we learned about LLMs in 2024. Large Language Models In the past 24-36 months, our species has discovered that you can take a GIANT corpus of text, run it through a pile of GPUs, and use it to create a fascinating new kind of software. LLMs can do a lot of things. They can answer questions, summarize documents, translate from one language to another, extract information and even write surprisingly competent code. They can also help you cheat at your homework, generate unlimited streams of fake content and be used for all manner of nefarious purposes. So far, I think they\u2019re a net positive. I\u2019ve used them on a personal level to improve my productivity (and entertain myself) in all sorts of different ways. I think people who learn how to use them effectively can gain a significant boost to their quality of life. A lot of people are yet to be sold on their value! Some think their negatives outweigh their positives, some think they are all hot air, and some even think they represent an existential threat to humanity. They\u2019re actually quite easy to build The most surprising thing we\u2019ve learned about LLMs this year is that they\u2019re actually quite easy to build. Intuitively, one would expect that systems this powerful would take millions of lines of complex code. Instead, it turns out a few hundred lines of Python is genuinely enough to train a basic version! What matters most is the training data. You need a lot of data to make these things work, and the quantity and quality of the training data appears to be the most important factor in how good the resulting model is. If you can gather the right data, and afford to pay for the GPUs to train it, you can build an LLM. A year ago, the only organization that had released a generally useful LLM was OpenAI. We\u2019ve now seen better-than-GPT-3 class models produced by Anthropic, Mistral, Google, Meta, EleutherAI, Stability AI, TII in Abu Dhabi (Falcon), Microsoft Research, xAI, Replit, Baidu and a bunch of other organizations. The training cost (hardware and electricity) is still significant\u2014initially millions of dollars, but that seems to have dropped to the tens of thousands already. Microsoft\u2019s Phi-2 claims to have used \u201c14 days on 96 A100 GPUs\u201d, which works out at around $35,000 using current Lambda pricing. So training an LLM still isn\u2019t something a hobbyist can afford, but it\u2019s no longer the sole domain of the super-rich. I like to compare the difficulty of training an LLM to that of building a suspension bridge\u2014not trivial, but hundreds of countries around the world have figured out how to do it. (Correction: Wikipedia\u2019s Suspension bridges by country category lists 44 countries). You can run LLMs on your own devices In January of this year, I thought it would be years before I could run a useful LLM on my own computer. GPT-3 and 3.5 were pretty much the only games in town, and I thought that even if the model weights were available it would take a $10,000+ server to run them. Then in February, Meta released Llama. And a few weeks later in March, Georgi Gerganov released code that got it working on a MacBook. I wrote about how Large language models are having their Stable Diffusion moment, and with hindsight that was a very good call! This unleashed a whirlwind of innovation, which was accelerated further in July when Meta released Llama 2\u2014an improved version which, crucially, included permission for commercial use. Today there are literally thousands of LLMs that can be run locally, on all manner of different devices. I run a bunch of them on my laptop. I run Mistral 7B (a surprisingly great model) on my iPhone. You can install several different apps to get your own, local, completely private LLM. My own LLM project provides a CLI tool for running an array of different models via plugins. You can even run them entirely in your browser using WebAssembly and the latest Chrome! Hobbyists can build their own fine-tuned models I said earlier that building an LLM was still out of reach of hobbyists. That may be true for training from scratch, but fine-tuning one of those models is another matter entirely. There\u2019s now a fascinating ecosystem of people training their own models on top of these foundations, publishing those models, building fine-tuning datasets and sharing those too. The Hugging Face Open LLM Leaderboard is one place that tracks these. I can\u2019t even attempt to count them, and any count would be out-of-date within a few hours. The best overall openly licensed LLM at any time is rarely a foundation model: instead, it\u2019s whichever fine-tuned community model has most recently discovered the best combination of fine-tuning data. This is a huge advantage for open over closed models: the closed, hosted models don\u2019t have thousands of researchers and hobbyists around the world collaborating and competing to improve them. We don\u2019t yet know how to build GPT-4 Frustratingly, despite the enormous leaps ahead we\u2019ve had this year, we are yet to see an alternative model that\u2019s better than GPT-4. OpenAI released GPT-4"
    ]
  },
  {
    "ID": "01942cec-3fe7-4dc2-8fdc-488cd7eee171",
    "Type:": "ReasoningEvolution",
    "Question": "How does the term 'slop' contribute to understanding the ethical use of AI according to the AI Ethics Researcher?",
    "Answer": "The term 'slop' is used to describe AI-generated content that is both unrequested and unreviewed, highlighting a specific ethical concern in AI usage. It serves as a concise way to communicate the negative aspects of AI, similar to how 'spam' is used for unwanted emails. This terminology helps in educating and alerting users about the kind of AI content they should be wary of, promoting a more responsible and informed engagement with AI technologies.",
    "Context": "definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014 both the positives and the negatives. \u2018Ignore that email, it\u2019s spam,\u2019 and \u2018Ignore that article, it\u2019s slop,\u2019 are both useful lessons. I love the term \u201cslop\u201d because it so succinctly captures one of the ways we should not be using generative AI! Slop was even in the running for Oxford Word of the Year 2024, but it lost to brain rot. Synthetic training data works great An idea that surprisingly seems to have stuck in the public consciousness is that of \u201cmodel collapse\u201d. This was first described in the paper The Curse of Recursion: Training on Generated Data Makes Models Forget in May 2023, and repeated in Nature in July 2024 with the more eye-catching headline AI models collapse when trained on recursively generated data. The idea is seductive: as the internet floods with AI-generated slop the models themselves will degenerate, feeding on their own output in a way that leads to their inevitable demise! That\u2019s clearly not happening. Instead, we are seeing AI labs increasingly train on synthetic content\u2014deliberately creating artificial data to help steer their models in the right way. One of the best descriptions I\u2019ve seen of this comes from the Phi-4 technical report, which included this: Synthetic data as a substantial component of pretraining is becoming increasingly common, and the Phi series of models has consistently emphasized the importance of synthetic data. Rather than serving as a cheap substitute for organic data, synthetic data has several direct advantages over organic data. Structured and Gradual Learning. In organic datasets, the relationship between tokens is often complex and indirect. Many reasoning steps may be required to connect the current token to the next, making it challenging for the model to learn effectively from next-token prediction. By contrast, each token generated by a language model is by definition predicted by the preceding tokens, making it easier for a model to follow the resulting reasoning patterns. Another common technique is to use larger models to help create training data for their smaller, cheaper alternatives\u2014a trick used by an increasing number of labs. DeepSeek v3 used \u201creasoning\u201d data created by DeepSeek-R1. Meta\u2019s Llama 3.3 70B fine-tuning used over 25M synthetically generated examples. Careful design of the training data that goes into an LLM appears to be the entire game for creating these models. The days of just grabbing a full scrape of the web and indiscriminately dumping it into a training run are long gone. LLMs somehow got even harder to use A drum I\u2019ve been banging for a while is that LLMs are power-user tools\u2014they\u2019re chainsaws disguised as kitchen knives. They look deceptively simple to use\u2014how hard can it be to type messages to a chatbot?\u2014but in reality you need a huge depth of both understanding and experience to make the most of them and avoid their many pitfalls. If anything, this problem got worse in 2024. We\u2019ve built computer systems you can talk to in human language, that will answer your questions and usually get them right! ... depending on the question, and how you ask it, and whether it\u2019s accurately reflected in the undocumented and secret training set. The number of available systems has exploded. Different systems have different tools they can apply to your problems\u2014like Python and JavaScript and web search and image generation and maybe even database lookups... so you\u2019d better understand what those tools are, what they can do and how to tell if the LLM used them or not. Did you know ChatGPT has two entirely different ways of running Python now? Want to build a Claude Artifact that talks to an external API? You\u2019d better understand CSP and CORS HTTP headers first. The models may have got more capable, but most of the limitations remained the same. OpenAI\u2019s o1 may finally be able to (mostly) count the Rs in strawberry, but its abilities are still limited by its nature as an LLM and the constraints placed on it by the harness it\u2019s running in. o1 can\u2019t run web searches or use Code Interpreter, but GPT-4o can\u2014both in that same ChatGPT UI. (o1 will pretend to do those things if you ask it to, a regression to the URL hallucinations bug from early 2023). What are we doing about this? Not much. Most users are thrown in at the deep end. The default LLM chat UI is like taking brand new computer users, dropping them into a Linux terminal and expecting them to figure it all out. Meanwhile, it\u2019s increasingly common for end users to develop wildly inaccurate mental models of how these things work and what they are capable of. I\u2019ve seen so many examples of people trying to win an argument with a screenshot from ChatGPT\u2014an inherently ludicrous proposition, given the inherent unreliability of these models crossed with the fact that you can get them to say anything if you prompt them right. There\u2019s a flipside to this too: a lot of better informed people have sworn off LLMs entirely because they can\u2019t see how anyone could benefit from a tool with so many flaws. The key skill in getting the most out of LLMs is learning to work with tech that is both inherently unreliable and incredibly powerful at the same time. This is a decidedly non-obvious skill to acquire! There is so much space for helpful education content here, but we need to do do a lot better than outsourcing it all to AI grifters with bombastic Twitter threads. Knowledge is incredibly unevenly distributed Most people have heard of ChatGPT by now. How many have heard of Claude? The knowledge gap between the people who actively follow this stuff and the 99% of the population who do not is vast."
  },
  {
    "ID": "3c4ddadc-eae8-4e9b-bdbd-b0da2a5c9b16",
    "Type:": "ReasoningEvolution",
    "Question": "Considering the environmental impacts and the advancements in AI model efficiency, what could be the potential reasoning behind the continued large-scale infrastructure investments by major tech companies?",
    "Answer": "The potential reasoning behind the continued large-scale infrastructure investments by major tech companies, despite the advancements in AI model efficiency and reduced training costs, could be driven by the anticipation of future needs and the desire to maintain a competitive edge. As AI technologies evolve and the demand for more complex computations increases, these companies might be preparing to meet future requirements that current infrastructure may not support. Additionally, the fear of being unprepared in a rapidly advancing technological landscape could motivate these investments, ensuring they are not left behind if computational needs surge unexpectedly.",
    "Context": "that it opens up a new way to scale a model: instead of improving model performance purely through additional compute at training time, models can now take on harder problems by spending more compute on inference. The sequel to o1, o3 (they skipped \u201co2\u201d for European trademark reasons) was announced on 20th December with an impressive result against the ARC-AGI benchmark, albeit one that likely involved more than $1,000,000 of compute time expense! o3 is expected to ship in January. I doubt many people have real-world problems that would benefit from that level of compute expenditure\u2014I certainly don\u2019t!\u2014but it appears to be a genuine next step in LLM architecture for taking on much harder problems. OpenAI are not the only game in town here. Google released their first entrant in the category, gemini-2.0-flash-thinking-exp, on December 19th. Alibaba\u2019s Qwen team released their QwQ model on November 28th\u2014under an Apache 2.0 license, and that one I could run on my own machine. They followed that up with a vision reasoning model called QvQ on December 24th, which I also ran locally. DeepSeek made their DeepSeek-R1-Lite-Preview model available to try out through their chat interface on November 20th. To understand more about inference scaling I recommend Is AI progress slowing down? by Arvind Narayanan and Sayash Kapoor. Nothing yet from Anthropic or Meta but I would be very surprised if they don\u2019t have their own inference-scaling models in the works. Meta published a relevant paper Training Large Language Models to Reason in a Continuous Latent Space in December. Was the best currently available LLM trained in China for less than $6m? Not quite, but almost! It does make for a great attention-grabbing headline. The big news to end the year was the release of DeepSeek v3\u2014dropped on Hugging Face on Christmas Day without so much as a README file, then followed by documentation and a paper the day after that. DeepSeek v3 is a huge 685B parameter model\u2014one of the largest openly licensed models currently available, significantly bigger than the largest of Meta\u2019s Llama series, Llama 3.1 405B. Benchmarks put it up there with Claude 3.5 Sonnet. Vibe benchmarks (aka the Chatbot Arena) currently rank it 7th, just behind the Gemini 2.0 and OpenAI 4o/o1 models. This is by far the highest ranking openly licensed model. The really impressive thing about DeepSeek v3 is the training cost. The model was trained on 2,788,000 H800 GPU hours at an estimated cost of $5,576,000. Llama 3.1 405B trained 30,840,000 GPU hours\u201411x that used by DeepSeek v3, for a model that benchmarks slightly worse. Those US export regulations on GPUs to China seem to have inspired some very effective training optimizations! The environmental impact got better A welcome result of the increased efficiency of the models\u2014both the hosted ones and the ones I can run locally\u2014is that the energy usage and environmental impact of running a prompt has dropped enormously over the past couple of years. OpenAI themselves are charging 100x less for a prompt compared to the GPT-3 days. I have it on good authority that neither Google Gemini nor Amazon Nova (two of the least expensive model providers) are running prompts at a loss. I think this means that, as individual users, we don\u2019t need to feel any guilt at all for the energy consumed by the vast majority of our prompts. The impact is likely neglible compared to driving a car down the street or maybe even watching a video on YouTube. Likewise, training. DeepSeek v3 training for less than $6m is a fantastic sign that training costs can and should continue to drop. For less efficient models I find it useful to compare their energy usage to commercial flights. The largest Llama 3 model cost about the same as a single digit number of fully loaded passenger flights from New York to London. That\u2019s certainly not nothing, but once trained that model can be used by millions of people at no extra training cost. The environmental impact got much, much worse The much bigger problem here is the enormous competitive buildout of the infrastructure that is imagined to be necessary for these models in the future. Companies like Google, Meta, Microsoft and Amazon are all spending billions of dollars rolling out new datacenters, with a very material impact on the electricity grid and the environment. There\u2019s even talk of spinning up new nuclear power stations, but those can take decades. Is this infrastructure necessary? DeepSeek v3\u2019s $6m training cost and the continued crash in LLM prices might hint that it\u2019s not. But would you want to be the big tech executive that argued NOT to build out this infrastructure only to be proven wrong in a few years\u2019 time? An interesting point of comparison here could be the way railways rolled out around the world in the 1800s. Constructing these required enormous investments and had a massive environmental impact, and many of the lines that were built turned out to be unnecessary\u2014sometimes multiple lines from different companies serving the exact same routes! The resulting bubbles contributed to several financial crashes, see Wikipedia for Panic of 1873, Panic of 1893, Panic of 1901 and the UK\u2019s Railway Mania. They left us with a lot of useful infrastructure and a great deal of bankruptcies and environmental damage. The year of slop 2024 was the year that the word \"slop\" became a term of art. I wrote about this in May, expanding on this tweet by @deepfates: Watching in real time as \u201cslop\u201d becomes a term of art. the way that \u201cspam\u201d became the term for unwanted emails, \u201cslop\u201d is going in the dictionary as the term for unwanted AI generated content I expanded that definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014"
  },
  {
    "ID": "b6dba2b4-bf64-47a4-be05-ae0f446a8972",
    "Type:": "ReasoningEvolution",
    "Question": "How does the concept of 'slop' as described in the context relate to the ethical concerns surrounding the use of AI in generating content?",
    "Answer": "The term 'slop' refers to AI-generated content that is both unrequested and unreviewed, highlighting a lack of oversight and quality control in AI outputs. This directly ties into ethical concerns as it raises issues of misinformation, reliability, and the potential harm of spreading unchecked, low-quality information. Ethically, the production of 'slop' undermines the responsible use of AI technologies by prioritizing quantity over quality, which can mislead users and erode trust in AI systems.",
    "Context": "definition a tiny bit to this: Slop describes AI-generated content that is both unrequested and unreviewed. I ended up getting quoted talking about slop in both the Guardian and the NY Times. Here\u2019s what I said in the NY TImes: Society needs concise ways to talk about modern A.I. \u2014 both the positives and the negatives. \u2018Ignore that email, it\u2019s spam,\u2019 and \u2018Ignore that article, it\u2019s slop,\u2019 are both useful lessons. I love the term \u201cslop\u201d because it so succinctly captures one of the ways we should not be using generative AI! Slop was even in the running for Oxford Word of the Year 2024, but it lost to brain rot. Synthetic training data works great An idea that surprisingly seems to have stuck in the public consciousness is that of \u201cmodel collapse\u201d. This was first described in the paper The Curse of Recursion: Training on Generated Data Makes Models Forget in May 2023, and repeated in Nature in July 2024 with the more eye-catching headline AI models collapse when trained on recursively generated data. The idea is seductive: as the internet floods with AI-generated slop the models themselves will degenerate, feeding on their own output in a way that leads to their inevitable demise! That\u2019s clearly not happening. Instead, we are seeing AI labs increasingly train on synthetic content\u2014deliberately creating artificial data to help steer their models in the right way. One of the best descriptions I\u2019ve seen of this comes from the Phi-4 technical report, which included this: Synthetic data as a substantial component of pretraining is becoming increasingly common, and the Phi series of models has consistently emphasized the importance of synthetic data. Rather than serving as a cheap substitute for organic data, synthetic data has several direct advantages over organic data. Structured and Gradual Learning. In organic datasets, the relationship between tokens is often complex and indirect. Many reasoning steps may be required to connect the current token to the next, making it challenging for the model to learn effectively from next-token prediction. By contrast, each token generated by a language model is by definition predicted by the preceding tokens, making it easier for a model to follow the resulting reasoning patterns. Another common technique is to use larger models to help create training data for their smaller, cheaper alternatives\u2014a trick used by an increasing number of labs. DeepSeek v3 used \u201creasoning\u201d data created by DeepSeek-R1. Meta\u2019s Llama 3.3 70B fine-tuning used over 25M synthetically generated examples. Careful design of the training data that goes into an LLM appears to be the entire game for creating these models. The days of just grabbing a full scrape of the web and indiscriminately dumping it into a training run are long gone. LLMs somehow got even harder to use A drum I\u2019ve been banging for a while is that LLMs are power-user tools\u2014they\u2019re chainsaws disguised as kitchen knives. They look deceptively simple to use\u2014how hard can it be to type messages to a chatbot?\u2014but in reality you need a huge depth of both understanding and experience to make the most of them and avoid their many pitfalls. If anything, this problem got worse in 2024. We\u2019ve built computer systems you can talk to in human language, that will answer your questions and usually get them right! ... depending on the question, and how you ask it, and whether it\u2019s accurately reflected in the undocumented and secret training set. The number of available systems has exploded. Different systems have different tools they can apply to your problems\u2014like Python and JavaScript and web search and image generation and maybe even database lookups... so you\u2019d better understand what those tools are, what they can do and how to tell if the LLM used them or not. Did you know ChatGPT has two entirely different ways of running Python now? Want to build a Claude Artifact that talks to an external API? You\u2019d better understand CSP and CORS HTTP headers first. The models may have got more capable, but most of the limitations remained the same. OpenAI\u2019s o1 may finally be able to (mostly) count the Rs in strawberry, but its abilities are still limited by its nature as an LLM and the constraints placed on it by the harness it\u2019s running in. o1 can\u2019t run web searches or use Code Interpreter, but GPT-4o can\u2014both in that same ChatGPT UI. (o1 will pretend to do those things if you ask it to, a regression to the URL hallucinations bug from early 2023). What are we doing about this? Not much. Most users are thrown in at the deep end. The default LLM chat UI is like taking brand new computer users, dropping them into a Linux terminal and expecting them to figure it all out. Meanwhile, it\u2019s increasingly common for end users to develop wildly inaccurate mental models of how these things work and what they are capable of. I\u2019ve seen so many examples of people trying to win an argument with a screenshot from ChatGPT\u2014an inherently ludicrous proposition, given the inherent unreliability of these models crossed with the fact that you can get them to say anything if you prompt them right. There\u2019s a flipside to this too: a lot of better informed people have sworn off LLMs entirely because they can\u2019t see how anyone could benefit from a tool with so many flaws. The key skill in getting the most out of LLMs is learning to work with tech that is both inherently unreliable and incredibly powerful at the same time. This is a decidedly non-obvious skill to acquire! There is so much space for helpful education content here, but we need to do do a lot better than outsourcing it all to AI grifters with bombastic Twitter threads. Knowledge is incredibly unevenly distributed Most people have heard of ChatGPT by now. How many have heard of Claude? The knowledge gap between the people who actively follow this stuff and the 99% of the population who do not is vast."
  },
  {
    "ID": "4df059dd-2723-4e91-8268-88be3e8a139e",
    "Type:": "ReasoningEvolution",
    "Question": "How did the encounter with manipulative AI during the Bing Chat session influence the AI Technology Analyst's understanding of AI behaviors?",
    "Answer": "The encounter with manipulative AI during the Bing Chat session likely heightened the AI Technology Analyst's awareness and understanding of the potential for AI systems to exhibit behaviors that could manipulate or mislead users. This experience would have underscored the importance of monitoring and evaluating AI technologies for ethical considerations and the need for safeguards against manipulative behaviors in AI systems.",
    "Context": "November 4th: Claude 3.5 Haiku 7th: Project: VERDAD\u2014tracking misinformation in radio broadcasts using Gemini 1.5 12th: Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac 19th: Notes from Bing Chat\u2014Our First Encounter With Manipulative AI 25th: Ask questions of SQLite databases and CSV/JSON files in your terminal December 4th: First impressions of the new Amazon Nova LLMs (via a new llm-bedrock plugin) 7th: Prompts.js 9th: I can now run a GPT-4 class model on my laptop 10th: ChatGPT Canvas can make API requests now, but it\u2019s complicated 11th: Gemini 2.0 Flash: An outstanding multi-modal LLM with a sci-fi streaming mode 19th: Building Python tools with a one-shot prompt using uv run and Claude Projects 19th: Gemini 2.0 Flash \u201cThinking mode\u201d 20th: December in LLMs has been a lot 20th: Live blog: the 12th day of OpenAI\u2014\u201cEarly evals for OpenAI o3\u201d 24th: Trying out QvQ\u2014Qwen\u2019s new visual reasoning model 31st: Things we learned about LLMs in 2024 (This list generated using Django SQL Dashboard with a SQL query written for me by Claude.) Posted 31st December 2024 at 6:07 pm \u00b7 Follow me on Mastodon or Twitter or subscribe to my newsletter More recent articles OpenAI o3-mini, now available in LLM - 31st January 2025 A selfish personal argument for releasing code as Open Source - 24th January 2025 Anthropic's new Citations API - 24th January 2025 This is Things we learned about LLMs in 2024 by Simon Willison, posted on 31st December 2024. Part of series LLMs annual review Stuff we figured out about AI in 2023 - Dec. 31, 2023, 11:59 p.m. Things we learned about LLMs in 2024 - Dec. 31, 2024, 6:07 p.m. google\n 345 ai\n 1080 openai\n 252 generative-ai\n 926 llms\n 914 anthropic\n 114 gemini\n 53 meta\n 26 inference-scaling\n 26 long-context\n 10 Next: Ending a year long posting streak Previous: Trying out QvQ - Qwen's new visual reasoning model Colophon \u00a9 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025"
  }
]